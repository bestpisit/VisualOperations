.npm/
node_modules
npm-debug.log
Dockerfile
docker-compose.yml
.pnp
.pnp.js
.yarn/install-state.gz
coverage
.next/
out/
build
.DS_Store
*.pem
yarn-debug.log*
yarn-error.log*
.env*
.vercel
*.tsbuildinfo
next-env.d.ts
build/
.gradle/
.gradletasknamecache
classes/
out/
target/
*.iws
*.iml
*.ipr
.idea/
.attach_pid*
*.code-workspace

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.

*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# VisOps Data
data
letsencrypt
logstash